Skip to content
nestuge
/
functions
Private
Code
Issues
Pull requests
Actions
Projects
More
functions/firestore.rules
@nelstein
nelstein prep for version 1.1.30
 History
 1 contributor
180 lines (154 sloc)  4.34 KB
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
   function isOwner() {
      return resource.data.userId ==  request.auth.uid;
    }
    
    function addRater(id){
     return request.auth.uid == id 
     && request.resource.data.rated > 0
     && request.resource.data.rated <= 5 
     && get(/databases/$(database)/documents/users/$(request.resource.data.userId)).data.stars >= request.resource.data.rated;
  }
    
    match /{document=**} {
      allow read: if false; 
      allow write: if false;
    }
     match /location/{id} {
      allow read,write; 
    }
    match /subscriptions/{id}{
     allow read :if request.auth.uid != null;
    }
    match /my_hubs/{id} {
      allow read,write; 
    }
    match /wallets/{id} {
      allow read,write:if request.auth.uid == id; 
    }
    match /transactions/{id} {
      allow write:if request.auth.uid != null; 
    }
      match /faqs/{id} {
      allow read; 
    }
       match /my_chats/{id} {
      allow read, write :if request.auth.uid == id; 
    }
    match /POST/{postid} {
      allow read; 
      allow update;
      allow create: if request.resource.data.userId == request.auth.uid; 
      allow delete: if isOwner();
      
      match /repost/{id} {
      allow read,write; 
    }
     match /voters/{id} {
      allow read;
      allow write:if request.auth.uid == id; 
    }
    }
    match /users/{userId} {
      allow read; 
      allow create : if userId == request.auth.uid;
      allow update:if userId == request.auth.uid; 
      // if request.resource.data.stars == resource.data.stars;
      
       match /tokens/{id} {
      allow read,write: if userId == request.auth.uid; 
    }
    match /cards/{id} {
      allow read,write: if userId == request.auth.uid; 
    }
      
    }
     match /chats/{chatId} {
      allow read,update: if request.auth.uid in resource.data.members;
      allow write: if request.auth.uid in request.resource.data.members
     
        match /msgs/{id} {
      allow read,write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members; 
    }
    }
    
     match /chat_ref/{doc=**} {
      allow read; 
    }
    
     match /hashtags/{id} {
      allow read, write; 
    }
    
      match /konektIds/{doc=**} {
      allow read; 
    }
     match /invites/{id} {
      allow write; 
      match /ids/{uid}{
      allow write; 
      }
    }
    
     match /default/{doc=**} {
      allow read; 
    }
    
    match /reports/{path=**} {
      allow write; 
    }
    
     match /pages/{doc=**} {
      allow read; 
    }
    
     match /hubs/{doc=**} {
      allow read, write; 
    }
    
     match /status/{id} {
      allow read, write: if request.auth.uid == id; 
    }
      match /stories/{id}{
     allow read, write: if request.auth.uid != null; 
    }
     match /blocked/{id} {
      allow read : if request.auth.uid != null;
      allow write: if request.auth.uid == id; 
    }
    
    match /unread_count/{id} {
      allow read,write: if request.auth.uid == id; 
    }
    
    match /archives/{id} {
      allow read,write; 
    }
    
    match /settings/{settingsId} {
      allow read,write: if request.auth.uid != null; 
    }
    
     match /saved/{savedId} {
      allow read,write: if savedId ==  request.auth.uid; 
    }
    
      match /notifications/{id}/myNotifs/{notifId} {
      allow read, write: if request.auth.uid != null;
  
    }
    
     match /followers/{id} {
      allow read;
      allow update : if resource.id == request.auth.uid   ||
      (request.auth.uid in resource.data.ids);
    }
    
     match /konektions/{id} {
      allow read;
      allow update : if true; 
    }
    
     match /following/{id} {
      allow read;
      allow update : if resource.id == request.auth.uid   || (request.auth.uid in resource.data.ids); 
    }
    
    match /{path=**}/raters/{id} {
           allow read;
        allow write: if addRater(id);
      allow delete: if request.auth.uid == id;
    }
        match /{path=**}/comments/{id} {
      allow read,update; 
      allow create: if request.resource.data.userId == request.auth.uid;
      allow delete: if isOwner();
    
   }
      match /{path=**}/ids/{id} {
      allow read,write; 
      allow delete: if isOwner();
    }
        match /{path=**}/replies/{replyId} {
      allow read,write; 
      allow delete: if isOwner();
    }
   }
  }
Â© 2022 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
Loading complete